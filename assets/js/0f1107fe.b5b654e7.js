(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[6909],{3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return u},kt:function(){return c}});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var i=a.createContext({}),p=function(e){var t=a.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},u=function(e){var t=p(e.components);return a.createElement(i.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,i=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),d=p(n),c=r,g=d["".concat(i,".").concat(c)]||d[c]||m[c]||o;return n?a.createElement(g,l(l({ref:t},u),{},{components:n})):a.createElement(g,l({ref:t},u))}));function c(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,l=new Array(o);l[0]=d;var s={};for(var i in t)hasOwnProperty.call(t,i)&&(s[i]=t[i]);s.originalType=e,s.mdxType="string"==typeof e?e:r,l[1]=s;for(var p=2;p<o;p++)l[p]=n[p];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},66729:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return l},metadata:function(){return s},toc:function(){return i},default:function(){return u}});var a=n(74034),r=n(79973),o=(n(67294),n(3905)),l={id:"ubuntu-step-by-step",title:"CE Step by Step Installation"},s={unversionedId:"installation/ubuntu-step-by-step",id:"installation/ubuntu-step-by-step",isDocsHomePage:!1,title:"CE Step by Step Installation",description:"Installing the Community Edition",source:"@site/docs/installation/ubuntu-step-by-step.mdx",sourceDirName:"installation",slug:"/installation/ubuntu-step-by-step",permalink:"/installation/ubuntu-step-by-step",editUrl:"https://github.com/erxes/erxes/edit/develop/docs/docs/installation/ubuntu-step-by-step.mdx",version:"current",lastUpdatedBy:"Anu-Ujin Bat-Ulzii",lastUpdatedAt:1605781393,formattedLastUpdatedAt:"11/19/2020",frontMatter:{id:"ubuntu-step-by-step",title:"CE Step by Step Installation"},sidebar:"docs",previous:{title:"CE Quick Start Installation",permalink:"/installation/ubuntu-quickstart"},next:{title:"Troubleshooting Ubuntu Installation",permalink:"/installation/ubuntu-troubleshooting"}},i=[{value:"Installing the Community Edition",id:"installing-the-community-edition",children:[]},{value:"First steps: Setting up a server with Ubuntu 18.04",id:"first-steps-setting-up-a-server-with-ubuntu-1804",children:[{value:"Configure your DNS Records to point at your server",id:"configure-your-dns-records-to-point-at-your-server",children:[]}]},{value:"Log into server as root and create erxes user",id:"log-into-server-as-root-and-create-erxes-user",children:[]},{value:"Set-up a basic firewall for SSH, nginx 80 and port 443",id:"set-up-a-basic-firewall-for-ssh-nginx-80-and-port-443",children:[{value:"Basic Firewall - Port 22",id:"basic-firewall---port-22",children:[]},{value:"HTTP &amp; HTTPS - Port 80 &amp; Port 443",id:"http--https---port-80--port-443",children:[]}]},{value:"Allow the &quot;erxes&quot; user to <strong>SSH</strong> into server",id:"allow-the-erxes-user-to-ssh-into-server",children:[]},{value:"Log in to your server as the &quot;erxes&quot; user.",id:"log-in-to-your-server-as-the-erxes-user",children:[]},{value:"Nvm install",id:"nvm-install",children:[]},{value:"Install Node.js with nvm",id:"install-nodejs-with-nvm",children:[]},{value:"Yarn install",id:"yarn-install",children:[]},{value:"Install MongoDB",id:"install-mongodb",children:[{value:"Deploy a MongoDB Replica Set",id:"deploy-a-mongodb-replica-set",children:[]}]},{value:"Install and configure NGINX",id:"install-and-configure-nginx",children:[]},{value:"Configure NGINX",id:"configure-nginx",children:[{value:"Configure NGINX",id:"configure-nginx-1",children:[]}]},{value:"Install Let&#39;s Encrypt using Certbot",id:"install-lets-encrypt-using-certbot",children:[]},{value:"Install erxes",id:"install-erxes",children:[{value:"Download, extract and install each of the erxes components",id:"download-extract-and-install-each-of-the-erxes-components",children:[]}]},{value:"Install PM2",id:"install-pm2",children:[{value:"Configure PM2 <code>ecosystem.config.js</code>",id:"configure-pm2-ecosystemconfigjs",children:[]},{value:"Configure frontend environment variables",id:"configure-frontend-environment-variables",children:[]}]},{value:"export MongoDB URL",id:"export-mongodb-url",children:[]},{value:"Congratulations, time to log in",id:"congratulations-time-to-log-in",children:[]}],p={toc:i};function u(e){var t=e.components,n=(0,r.Z)(e,["components"]);return(0,o.kt)("wrapper",(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"installing-the-community-edition"},"Installing the Community Edition"),(0,o.kt)("p",null,"The following instructions take you through ",(0,o.kt)("strong",{parentName:"p"},"step by step")," and have you install erxes in the same way as the ",(0,o.kt)("a",{parentName:"p",href:"/installation/ubuntu-quickstart"},"Quickstart installation")," instructions. For most developers, the ",(0,o.kt)("strong",{parentName:"p"},"Quick Start Installation")," is better."),(0,o.kt)("h2",{id:"first-steps-setting-up-a-server-with-ubuntu-1804"},"First steps: Setting up a server with Ubuntu 18.04"),(0,o.kt)("p",null,"You must have an account with your hosting provider prior to doing these steps."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Choose a server size that corresponds with the ",(0,o.kt)("strong",{parentName:"li"},"minimum")," requirements for these ",(0,o.kt)("strong",{parentName:"li"},"Step by Step")," instructions:",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Ubuntu 18.04")," installed and running"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"1 CPU")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"minimum 1GB RAM")),(0,o.kt)("li",{parentName:"ul"},"ability to to SSH into the server"),(0,o.kt)("li",{parentName:"ul"},"If you're using a ",(0,o.kt)("strong",{parentName:"li"},"subdomain"),", then the ",(0,o.kt)("strong",{parentName:"li"},"subdomain")," must be created with your hosting provider hosting your main domain's website or app. The DNS needs to be pointed to your server. (See below)")))),(0,o.kt)("h3",{id:"configure-your-dns-records-to-point-at-your-server"},"Configure your DNS Records to point at your server"),(0,o.kt)("p",null,"Your server will have an ",(0,o.kt)("strong",{parentName:"p"},"ip address"),". You will need to point your domain name to your new server."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"If you are using a ",(0,o.kt)("strong",{parentName:"li"},"subdomain"),", you will need to follow the instructions of updating the `A Records' of the hosting company for your website."),(0,o.kt)("li",{parentName:"ul"},"If you are NOT using a ",(0,o.kt)("strong",{parentName:"li"},"subdomain"),", then you will need to follow the instructions of your domain name registrar.")),(0,o.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"Example with a domain called, example.com")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"If your domain name is ",(0,o.kt)("strong",{parentName:"p"},"example.com"),", and the ",(0,o.kt)("strong",{parentName:"p"},"ip address")," assigned to your server is ",(0,o.kt)("strong",{parentName:"p"},"44.123.32.12"),", then you will have two ",(0,o.kt)("inlineCode",{parentName:"p"},"A records")," that look like this:"),(0,o.kt)("table",{parentName:"div"},(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Type"),(0,o.kt)("th",{parentName:"tr",align:null},"Name"),(0,o.kt)("th",{parentName:"tr",align:null},"Value"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"A"),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"http://www.example.com"},"www.example.com")),(0,o.kt)("td",{parentName:"tr",align:null},"points to 44.123.32.12")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"A"),(0,o.kt)("td",{parentName:"tr",align:null},"example.com"),(0,o.kt)("td",{parentName:"tr",align:null},"points to 44.123.32.12")))))),(0,o.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"Example with a subdomain called, erxes.example.com")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},'You first need to create a subdomain. For example, "erxes.example.com". Then you need to edit the ',(0,o.kt)("strong",{parentName:"p"},"DNS"),"."),(0,o.kt)("p",{parentName:"div"},"If your domain name is ",(0,o.kt)("strong",{parentName:"p"},"erxes.example.com"),", and the ",(0,o.kt)("strong",{parentName:"p"},"ip address")," assigned to your server is ",(0,o.kt)("strong",{parentName:"p"},"44.123.32.12"),", then you will have a two ",(0,o.kt)("inlineCode",{parentName:"p"},"A records")," that look like this:"),(0,o.kt)("table",{parentName:"div"},(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Type"),(0,o.kt)("th",{parentName:"tr",align:null},"Name"),(0,o.kt)("th",{parentName:"tr",align:null},"Value"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"A"),(0,o.kt)("td",{parentName:"tr",align:null},"erxes.example.com"),(0,o.kt)("td",{parentName:"tr",align:null},"points to 44.123.32.12")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"A"),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"http://www.erxes.example.com"},"www.erxes.example.com")),(0,o.kt)("td",{parentName:"tr",align:null},"points to 44.123.32.12")))),(0,o.kt)("p",{parentName:"div"},(0,o.kt)("strong",{parentName:"p"},"Note:"),' You do not need to create a subdomain called "erxes.example.com", you can use another name of your choice such as "admin.example.com".'))),(0,o.kt)("h2",{id:"log-into-server-as-root-and-create-erxes-user"},"Log into server as root and create erxes user"),(0,o.kt)("p",null,"Open the terminal or command prompt on your computer. You will need your ",(0,o.kt)("strong",{parentName:"p"},"IP address"),". (In this example, ",(0,o.kt)("strong",{parentName:"p"},"44.123.32.12"),"). Type ",(0,o.kt)("inlineCode",{parentName:"p"},"yes"),", when asked if you want to continue connecting."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"# example ssh root@44.123.32.12\nssh root@your-ip-address\n")),(0,o.kt)("p",null,"(",(0,o.kt)("strong",{parentName:"p"},"Note"),": Some people get an error, ",(0,o.kt)("strong",{parentName:"p"},"WARNING: REMOTE HOST IDENTIFICATION HAS CHANGED!"),", please see the solution ",(0,o.kt)("a",{parentName:"p",href:"/installation/ubuntu-troubleshooting"},"here"),".)"),(0,o.kt)("p",null,"You don't want to use the ",(0,o.kt)("strong",{parentName:"p"},"root")," user to administer your server. So everything will be done by a user called, ",(0,o.kt)("strong",{parentName:"p"},"erxes"),". To accomplish this, run the following commands:"),(0,o.kt)("p",null,'Add a user called "erxes". When prompted, enter in a ',(0,o.kt)("strong",{parentName:"p"},"unique")," password. You will need to keep this password available, as later operations will require using it."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"adduser erxes\n")),(0,o.kt)("p",null,"(Finish adding the user simply by pressing the ",(0,o.kt)("inlineCode",{parentName:"p"},"enter")," or ",(0,o.kt)("inlineCode",{parentName:"p"},"return")," key through the questions.)"),(0,o.kt)("p",null,"Grant the ",(0,o.kt)("strong",{parentName:"p"},"erxes")," user adminstrative rights."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"usermod -aG sudo erxes\n")),(0,o.kt)("p",null,"Your next step, still as ",(0,o.kt)("strong",{parentName:"p"},"root")," user, is to set-up a basic firewall for your server."),(0,o.kt)("h2",{id:"set-up-a-basic-firewall-for-ssh-nginx-80-and-port-443"},"Set-up a basic firewall for SSH, nginx 80 and port 443"),(0,o.kt)("h3",{id:"basic-firewall---port-22"},"Basic Firewall - Port 22"),(0,o.kt)("p",null,"Allow OpenSSH with ",(0,o.kt)("strong",{parentName:"p"},"ufw"),". OpenSSH will use ",(0,o.kt)("strong",{parentName:"p"},"port 22"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"ufw allow OpenSSH\n")),(0,o.kt)("p",null,"Enable ",(0,o.kt)("strong",{parentName:"p"},"ufw")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"ufw enable\n")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Type ",(0,o.kt)("inlineCode",{parentName:"li"},"y"),' when asked, "',(0,o.kt)("strong",{parentName:"li"},"Command may disrupt existing ssh connections. Proceed with operation (y|n)?"),'"')),(0,o.kt)("p",null,"Check the ",(0,o.kt)("strong",{parentName:"p"},"ufw")," status"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"ufw status\n")),(0,o.kt)("p",null,"You should have an output like below:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"Status: active\n\nTo                         Action      From\n--                         ------      ----\nOpenSSH                    ALLOW       Anywhere\nOpenSSH (v6)               ALLOW       Anywhere (v6)\n")),(0,o.kt)("h3",{id:"http--https---port-80--port-443"},"HTTP & HTTPS - Port 80 & Port 443"),(0,o.kt)("p",null,"Allow ",(0,o.kt)("strong",{parentName:"p"},"HTTP")," (port 80) and ",(0,o.kt)("strong",{parentName:"p"},"HTTPS")," (port 443) with ",(0,o.kt)("strong",{parentName:"p"},"ufw")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"ufw allow proto tcp from any to any port 80,443\n")),(0,o.kt)("p",null,"Check the ufw status"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"ufw status\n")),(0,o.kt)("p",null,"You should have an output like below:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"Status: active\n\nTo                         Action      From\n--                         ------      ----\nOpenSSH                    ALLOW       Anywhere\n80,443/tcp                 ALLOW       Anywhere\nOpenSSH (v6)               ALLOW       Anywhere (v6)\n80,443/tcp (v6)            ALLOW       Anywhere (v6)\n")),(0,o.kt)("h2",{id:"allow-the-erxes-user-to-ssh-into-server"},'Allow the "erxes" user to ',(0,o.kt)("strong",{parentName:"h2"},"SSH")," into server"),(0,o.kt)("p",null,"open the ",(0,o.kt)("inlineCode",{parentName:"p"},"sshd_config")," file to edit"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"nano /etc/ssh/ssh_config\n")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"Scroll down until you see ",(0,o.kt)("inlineCode",{parentName:"p"},"PasswordAuthentication"),". Change it from ",(0,o.kt)("inlineCode",{parentName:"p"},"PasswordAuthentication no")," to ",(0,o.kt)("inlineCode",{parentName:"p"},"PasswordAuthentication yes"),". ",(0,o.kt)("strong",{parentName:"p"},"NOTE"),": Some servers have this line commented out with a ",(0,o.kt)("inlineCode",{parentName:"p"},"#"),", like ",(0,o.kt)("inlineCode",{parentName:"p"},"# PasswordAuthentication no"),". You will need to uncomment it by deleting the ",(0,o.kt)("inlineCode",{parentName:"p"},"#"),".")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"The line should look like this:"))),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"PasswordAuthentication yes\n")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Save and exit with ",(0,o.kt)("inlineCode",{parentName:"li"},"ctrl + x")," and then ",(0,o.kt)("inlineCode",{parentName:"li"},"y")," to accept the changes.")),(0,o.kt)("p",null,"Reload the SSH config file"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"sudo service sshd reload\n")),(0,o.kt)("p",null,"Exit from server, so that you can log back in as the ",(0,o.kt)("strong",{parentName:"p"},"erxes")," user"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"exit\n")),(0,o.kt)("p",null,"You have created a new user called, ",(0,o.kt)("strong",{parentName:"p"},"erxes")," and you set-up a basic firewall to protect your server against malicious attacks."),(0,o.kt)("p",null,"Please continue with the following steps to log in to your server as the ",(0,o.kt)("strong",{parentName:"p"},"erxes")," user."),(0,o.kt)("h2",{id:"log-in-to-your-server-as-the-erxes-user"},'Log in to your server as the "erxes" user.'),(0,o.kt)("p",null,"Before you can log into your new server, we need to ",(0,o.kt)("strong",{parentName:"p"},"add the SSH key")," to your ",(0,o.kt)("strong",{parentName:"p"},"local")," computer."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"NOTE:")," You need to use the ",(0,o.kt)("strong",{parentName:"p"},"IP address")," of your server."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Run the following command and ",(0,o.kt)("strong",{parentName:"li"},"create a new password"),".")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"#ssh-copy-id erxes@44.123.32.12 <--- This is an example. Use your ip address\nssh-copy-id erxes@your-IP-address\n")),(0,o.kt)("p",null,"Now you can log into your server as the ",(0,o.kt)("strong",{parentName:"p"},"erxes")," user."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Log back into the server as the ",(0,o.kt)("strong",{parentName:"li"},"erxes")," user. You will need your IP address. (In this example, ",(0,o.kt)("strong",{parentName:"li"},"44.123.32.12"),"). Enter your previously created password, if prompted.")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"# example ssh erxes@44.123.32.12 <--- This is an example. Use your ip address\nssh erxes@your-ip-address\n")),(0,o.kt)("p",null,"In the following sections, you will install software dependencies that are needed to run ",(0,o.kt)("strong",{parentName:"p"},"erxes"),"."),(0,o.kt)("h2",{id:"nvm-install"},"Nvm install"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Node Version Manage (nvm)")," is a tool that allows you to download and install ",(0,o.kt)("a",{parentName:"p",href:"https://nodejs.org/"},"Node.js"),". You can read more about the installation process here: ",(0,o.kt)("a",{parentName:"p",href:"https://gist.github.com/d2s/372b5943bce17b964a79"},"How to install NVM")),(0,o.kt)("p",null,"Install ",(0,o.kt)("strong",{parentName:"p"},"nvm")," and initialize by reloading the shell configuration. (Run the following commands separately.)"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.35.3/install.sh | bash\nsource ~/.bashrc\n")),(0,o.kt)("p",null,"Verify ",(0,o.kt)("strong",{parentName:"p"},"nvm")," is installed by running:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"nvm --version\n")),(0,o.kt)("p",null,"You should get a similar output as below:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"0.35.3\n# your version of nvm may be different\n")),(0,o.kt)("p",null,"You are ready to continue with installing ",(0,o.kt)("strong",{parentName:"p"},"Node.js"),"."),(0,o.kt)("h2",{id:"install-nodejs-with-nvm"},"Install Node.js with nvm"),(0,o.kt)("p",null,"You can read more about installing ",(0,o.kt)("strong",{parentName:"p"},"Node.js")," with ",(0,o.kt)("strong",{parentName:"p"},"nvm")," here: ",(0,o.kt)("a",{parentName:"p",href:"https://gist.github.com/d2s/372b5943bce17b964a79#install-nodejs-with-nvm"},"How to install Node.js with NVM")),(0,o.kt)("p",null,"Install ",(0,o.kt)("strong",{parentName:"p"},"Node.js")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"nvm install --lts\n")),(0,o.kt)("p",null,"Check to see if ",(0,o.kt)("strong",{parentName:"p"},"Node.js")," is installed correctly."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"node -v\n")),(0,o.kt)("p",null,"You should get a similar output as below:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"v12.19.0\n# your version of node.js may be different\n")),(0,o.kt)("p",null,"With ",(0,o.kt)("strong",{parentName:"p"},"Node.js")," installed, you can continue with installing ",(0,o.kt)("strong",{parentName:"p"},"Yarn"),"."),(0,o.kt)("h2",{id:"yarn-install"},"Yarn install"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Yarn")," is a package manager. The alternative is ",(0,o.kt)("a",{parentName:"p",href:"https://www.npmjs.com/"},"npm"),". We recommend ",(0,o.kt)("a",{parentName:"p",href:"https://yarnpkg.com/"},"yarn"),". For additional ",(0,o.kt)("a",{parentName:"p",href:"https://classic.yarnpkg.com/en/docs/install/#debian-stable"},"yarn installation instructions, read this"),"."),(0,o.kt)("p",null,"Install ",(0,o.kt)("strong",{parentName:"p"},"yarn"),". (Run the following commands separately.)"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add -\necho "deb https://dl.yarnpkg.com/debian/ stable main" | sudo tee /etc/apt/sources.list.d/yarn.list\nsudo apt update && sudo apt install --no-install-recommends yarn\n')),(0,o.kt)("p",null,"Check to see if ",(0,o.kt)("strong",{parentName:"p"},"yarn")," is installed correctly"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"yarn --version\n")),(0,o.kt)("p",null,"You should get a similar output as below:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"1.22.5\n# your version of yarn may be different\n")),(0,o.kt)("p",null,"As long as you received a version response to ",(0,o.kt)("inlineCode",{parentName:"p"},"yarn --version"),", then you can continue and install ",(0,o.kt)("strong",{parentName:"p"},"MongoDB"),"."),(0,o.kt)("h2",{id:"install-mongodb"},"Install MongoDB"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"MongoDB")," is a robust and general purpose document-based database. For additional ",(0,o.kt)("a",{parentName:"p",href:"https://docs.mongodb.com/manual/tutorial/install-mongodb-on-ubuntu/"},"MongoDB installation instructions, read this"),"."),(0,o.kt)("p",null,"Erxes supports MongoDB version 3.6+ is supported. Previous versions are not supported."),(0,o.kt)("p",null,"Install ",(0,o.kt)("strong",{parentName:"p"},"MongoDB"),". (Run the following commands separately.)"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'wget -qO - https://www.mongodb.org/static/pgp/server-4.2.asc | sudo apt-key add -\necho "deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu bionic/mongodb-org/4.2 multiverse" | sudo tee /etc/apt/sources.list.d/mongodb-org-4.2.list\nsudo apt-get update\nsudo apt-get install -y mongodb-org\n')),(0,o.kt)("p",null,"Start and enable ",(0,o.kt)("strong",{parentName:"p"},"MongoDB"),". (Run the following commands separately.)"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"sudo systemctl start mongod\nsudo systemctl enable mongod\n\n#Created symlink /etc/systemd/system/multi-user.target.wants/mongod.service \u2192 /lib/systemd/system/mongod.service.\n")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Check to see if ",(0,o.kt)("strong",{parentName:"li"},"MongoDB")," is installed correctly")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"mongod --version\n")),(0,o.kt)("p",null,"As long as you received a version response to ",(0,o.kt)("inlineCode",{parentName:"p"},"mongod --version"),", then you can continue below."),(0,o.kt)("h3",{id:"deploy-a-mongodb-replica-set"},"Deploy a MongoDB Replica Set"),(0,o.kt)("p",null,"MongoDB ",(0,o.kt)("a",{parentName:"p",href:"https://docs.mongodb.com/manual/reference/glossary/#term-replica-set"},"replica sets")," add an extra layer of redundancy and help with load balancing. They are a group of ",(0,o.kt)("strong",{parentName:"p"},"mongod processes")," that maintain matching data sets. You can read about ",(0,o.kt)("strong",{parentName:"p"},"replication")," ",(0,o.kt)("a",{parentName:"p",href:"https://docs.mongodb.com/manual/replication/"},"here"),"."),(0,o.kt)("p",null,"Stop the ",(0,o.kt)("strong",{parentName:"p"},"mongod")," processes"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"sudo systemctl stop mongod\n")),(0,o.kt)("p",null,"Open ",(0,o.kt)("strong",{parentName:"p"},"mongod.conf")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"sudo nano /etc/mongod.conf\n")),(0,o.kt)("p",null,"Enable the ",(0,o.kt)("strong",{parentName:"p"},"replicaset")," settings, by searching for ",(0,o.kt)("inlineCode",{parentName:"p"},"#replication"),". Remove the ",(0,o.kt)("inlineCode",{parentName:"p"},"#")," to activate it and edit to include the set name, as follows:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'replication:\n  replSetName: "rs0"\n')),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Save and Exit with ",(0,o.kt)("inlineCode",{parentName:"li"},"ctrl + x")," and then ",(0,o.kt)("inlineCode",{parentName:"li"},"y")," to accept the changes.")),(0,o.kt)("p",null,"Restart mongob"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"sudo systemctl start mongod\n")),(0,o.kt)("p",null,"Connect to mongo shell"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"mongo\n")),(0,o.kt)("p",null,"Initialize replicaSet"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"rs.initiate()\n")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"You should have an output similar to below. Verify ",(0,o.kt)("strong",{parentName:"li"},"SECONDARY")," changes to ",(0,o.kt)("strong",{parentName:"li"},"Primary")," by pressing enter several times.")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'{\n    "info2" : "no configuration specified. Using a default configuration for the set",\n    "me" : "127.0.0.1:27017",\n    "ok" : 1,\n    "$clusterTime" : {\n        "clusterTime" : Timestamp(1594140533, 1),\n        "signature" : {\n            "hash" : BinData(0,"AAAAAAAAAAAAAAAAAAAAAAAAAAA="),\n            "keyId" : NumberLong(0)\n        }\n    },\n    "operationTime" : Timestamp(1594140533, 1)\n}\n\nrs0:SECONDARY>\nrs0:PRIMARY> # <----- This is what you are looking for\n')),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"press ",(0,o.kt)("inlineCode",{parentName:"li"},"ctrl-c")," to quit mongo")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"rs0:PRIMARY>\nbye\n")),(0,o.kt)("p",null,"If you were able to return to the command line prompt. Then you may continue with installing and configuring NGINX."),(0,o.kt)("h2",{id:"install-and-configure-nginx"},"Install and configure NGINX"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"NGINX")," is a very powerful web server. It is often used as a proxy server for emails. For additional ",(0,o.kt)("a",{parentName:"p",href:"https://www.nginx.com/resources/wiki/start/topics/tutorials/install/"},"NGINX installation instructions, read this"),"."),(0,o.kt)("p",null,"NGINX is installed from the stable repo ",(0,o.kt)("a",{parentName:"p",href:"https://launchpad.net/~nginx/+archive/ubuntu/stable"},"https://launchpad.net/~nginx/+archive/ubuntu/stable"),"."),(0,o.kt)("p",null,"Add the ",(0,o.kt)("strong",{parentName:"p"},"PPA")," for ",(0,o.kt)("strong",{parentName:"p"},"NGINX"),". Press ",(0,o.kt)("inlineCode",{parentName:"p"},"enter")," when prompted to continue. (Run the following commands separately.)"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"sudo add-apt-repository ppa:nginx/stable\n\nThis PPA contains the latest Stable Release version of the nginx web server software.\n\n**Only Non-End-of-Life Ubuntu Releases are supported in this PPA**\n\n**Development releases of Ubuntu are not officially supported by this PPA, and uploads for those will not be available until actual final releases for those versions**\n More info: https://launchpad.net/~nginx/+archive/ubuntu/stable\nPress [ENTER] to continue or Ctrl-c to cancel adding it.\n\n")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Press Enter")," to continue with the installation. You should be using Ubuntu 18.04.")),(0,o.kt)("p",null,"Install ",(0,o.kt)("strong",{parentName:"p"},"NGINX")," with the following commands."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"sudo apt-get update\nsudo apt-get install -y nginx\n")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"NGINX")," started by default when you installed it. But it is recommended to ",(0,o.kt)("inlineCode",{parentName:"p"},"enable")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"start")," anyway."),(0,o.kt)("p",null,"Enable and start ",(0,o.kt)("strong",{parentName:"p"},"NGINX")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"sudo systemctl enable nginx\nsudo systemctl start nginx\n")),(0,o.kt)("h2",{id:"configure-nginx"},"Configure NGINX"),(0,o.kt)("p",null,"The next step is to configure ",(0,o.kt)("strong",{parentName:"p"},"NGINX")," so that it allows traffic through ",(0,o.kt)("inlineCode",{parentName:"p"},"Ports 80 and 443"),"."),(0,o.kt)("p",null,"Ensure the ",(0,o.kt)("inlineCode",{parentName:"p"},"ufw")," firewall knows about the available applications."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"sudo ufw app list\n")),(0,o.kt)("p",null,"You are expecting the following output:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"Available applications:\n  Nginx Full\n  Nginx HTTP\n  Nginx HTTPS\n  OpenSSH\n")),(0,o.kt)("p",null,"The output should look something like the ",(0,o.kt)("inlineCode",{parentName:"p"},"Available applications")," output above. ",(0,o.kt)("inlineCode",{parentName:"p"},"Nginx Full")," should be listed."),(0,o.kt)("p",null,"Enable Port 80 and Port 443 to allow traffic."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"sudo ufw allow 'Nginx Full'\n")),(0,o.kt)("p",null,"Verify that ",(0,o.kt)("inlineCode",{parentName:"p"},"ufw")," has been updated."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"sudo ufw status\n")),(0,o.kt)("p",null,"You are expecting the following output."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"Status: active\n\nTo                         Action      From\n--                         ------      ----\nOpenSSH                    ALLOW       Anywhere\n80,443/tcp                 ALLOW       Anywhere\nNginx Full                 ALLOW       Anywhere\nOpenSSH (v6)               ALLOW       Anywhere (v6)\n80,443/tcp (v6)            ALLOW       Anywhere (v6)\nNginx Full (v6)            ALLOW       Anywhere (v6)\n")),(0,o.kt)("p",null,"Your output should match the above output. Providing your output matches the above, you may continue to configuring ",(0,o.kt)("strong",{parentName:"p"},"NGINX"),"."),(0,o.kt)("h3",{id:"configure-nginx-1"},"Configure NGINX"),(0,o.kt)("p",null,"The next step is to create a server block with the correct directives to work with the erxes installation."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Create a new file in the correct directory, and name it your domain name. For example, if your domain name is ",(0,o.kt)("inlineCode",{parentName:"li"},"erxes.example.com"),", name the file, ",(0,o.kt)("inlineCode",{parentName:"li"},"erxes.example.com"),".")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"# example: sudo nano /etc/nginx/sites-available/erxes.example.com\nsudo nano /etc/nginx/sites-available/YOUR-DOMAIN-NAME\n")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Copy the below ",(0,o.kt)("strong",{parentName:"li"},"NGINX server block")," into the open file. ",(0,o.kt)("strong",{parentName:"li"},"DO NOT SAVE THE FILE")," until you replace the ",(0,o.kt)("inlineCode",{parentName:"li"},"YOUR_DOMAIN_COM")," with your actual ",(0,o.kt)("inlineCode",{parentName:"li"},"domain name"),".")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-txt"},"server {\n        listen 80;\n\n        # your domain name here\n        # for example, server_name erxes.example.com;\n        server_name YOUR_DOMAIN_COM;\n\n        # erxes build path\n        root /home/erxes/erxes.io/erxes/build;\n        index index.html;\n\n        error_log /var/log/nginx/erxes.error.log;\n        access_log /var/log/nginx/erxes.access.log;\n\n        location / {\n                root /home/erxes/erxes.io/erxes/build;\n                index index.html;\n                try_files $uri /index.html;\n        }\n\n        # widgets is running on 3200 port.\n        location /widgets/ {\n                proxy_pass http://127.0.0.1:3200/;\n                proxy_set_header Host $http_host;\n                proxy_set_header X-Real-IP $remote_addr;\n                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n                proxy_http_version 1.1;\n        }\n\n        # api project is running on 3300 port.\n        location /api/ {\n                proxy_pass http://127.0.0.1:3300/;\n                # proxy_set_header Host $http_host;\n                proxy_set_header X-Real-IP $remote_addr;\n                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n                proxy_http_version 1.1;\n                proxy_set_header Upgrade $http_upgrade;\n                # proxy_set_header Connection \"Upgrade\";\n                proxy_set_header Connection 'upgrade';\n                proxy_set_header Host $host;\n        }\n        # erxes integrations project is running on 3400 port.\n        location /integrations/ {\n                proxy_pass http://127.0.0.1:3400/;\n                proxy_set_header Host $http_host;\n                proxy_set_header X-Real-IP $remote_addr;\n                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n                proxy_http_version 1.1;\n        }\n}\n")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"After replacing ",(0,o.kt)("inlineCode",{parentName:"li"},"YOUR_DOMAIN_COM")," with your actual domain name. Save with ",(0,o.kt)("inlineCode",{parentName:"li"},"ctrl + x")," and then ",(0,o.kt)("inlineCode",{parentName:"li"},"y")," to accept the changes."),(0,o.kt)("li",{parentName:"ul"},"Enable the file by creating a link form it to ",(0,o.kt)("strong",{parentName:"li"},"sites-enabled"),". Make sure to ",(0,o.kt)("strong",{parentName:"li"},"use your domain name")," exactly as you created the file above. ",(0,o.kt)("strong",{parentName:"li"},"Replace")," ",(0,o.kt)("inlineCode",{parentName:"li"},"YOUR_DOMAIN_COM")," ",(0,o.kt)("strong",{parentName:"li"},"with your actual domain name."))),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"sudo ln -s /etc/nginx/sites-available/YOUR_DOMAIN_COM /etc/nginx/sites-enabled/\n")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Open the ",(0,o.kt)("strong",{parentName:"li"},"nginx.conf"))),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"sudo nano /etc/nginx/nginx.conf\n")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Uncomment the following line ",(0,o.kt)("inlineCode",{parentName:"li"},"server_names_hash_bucket_size 64;"))),(0,o.kt)("p",null,"It should look like this:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-txt"},"http {\n    * * *\n\n    server_names_hash_bucket_size 64;\n\n    * * *\n}\n")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"Save with ",(0,o.kt)("inlineCode",{parentName:"p"},"ctrl + x")," and then ",(0,o.kt)("inlineCode",{parentName:"p"},"y")," to accept the changes.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"Test the ",(0,o.kt)("strong",{parentName:"p"},"NGINX")," configuration to make sure you don't have any errors"))),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"sudo nginx -t\n")),(0,o.kt)("p",null,"You should see the following output:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"nginx: the configuration file /etc/nginx/nginx.conf syntax is ok\nnginx: configuration file /etc/nginx/nginx.conf test is successful\n")),(0,o.kt)("p",null,"If you got no errors, reload nginx service."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"sudo systemctl reload nginx\n")),(0,o.kt)("p",null,"Now you are ready to install the SSL Certificates using ",(0,o.kt)("strong",{parentName:"p"},"Let's Encrypt")," and ",(0,o.kt)("strong",{parentName:"p"},"Certbot"),"."),(0,o.kt)("h2",{id:"install-lets-encrypt-using-certbot"},"Install Let's Encrypt using Certbot"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Let's Encrypt")," enables you to use ",(0,o.kt)("strong",{parentName:"p"},"HTTPS")," on your website. It will issue you a certificate which shows that you control your domain. ",(0,o.kt)("a",{parentName:"p",href:"https://www.nginx.com/resources/wiki/start/topics/tutorials/install/"},"Let's Encrypt additional information"),"."),(0,o.kt)("p",null,"You will follow the installation instructions as covered ",(0,o.kt)("a",{parentName:"p",href:"https://certbot.eff.org/lets-encrypt/ubuntubionic-nginx"},"here"),", with ",(0,o.kt)("a",{parentName:"p",href:"https://certbot.eff.org/"},"Certbot")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"You will need to add a ",(0,o.kt)("strong",{parentName:"li"},"Certbot")," PPA to the list of repositories on the server. (Run the following commands separately.)")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"sudo apt-get update\nsudo apt-get -y install software-properties-common\nsudo add-apt-repository universe\nsudo add-apt-repository -y ppa:certbot/certbot\nsudo apt-get update\n")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Install Certbot")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"sudo apt-get install -y certbot python3-certbot-nginx\n")),(0,o.kt)("p",null,"Execute Certbot."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"sudo certbot --nginx\n")),(0,o.kt)("p",null,"You will asked several questions, you can answer as follows:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"Enter your email address")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"Agree with the ",(0,o.kt)("strong",{parentName:"p"},"Terms of Service"))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"Answer ",(0,o.kt)("inlineCode",{parentName:"p"},"Yes")," or ",(0,o.kt)("inlineCode",{parentName:"p"},"No"),", if you want to share your email address with the Electronic Frontier Foundation")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"Select the corresponding number associated with your domain name, usually ",(0,o.kt)("inlineCode",{parentName:"p"},"1"))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"Choose ",(0,o.kt)("inlineCode",{parentName:"p"},"2")," to redirect all your traffic to a secure ",(0,o.kt)("strong",{parentName:"p"},"HTTPS"))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"Now run the following to ",(0,o.kt)("strong",{parentName:"p"},"test and set-up")," automatic renewal of your 90 day certbot. This needs to succeed so that your renewals are automatic."))),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"sudo certbot renew --dry-run\n")),(0,o.kt)("p",null,"Check your website in the browser. You should see the ",(0,o.kt)("strong",{parentName:"p"},"Secure Padlock")," next to your URL. You are now ready to move onto the final steps to install ",(0,o.kt)("strong",{parentName:"p"},"erxes")," itself."),(0,o.kt)("h2",{id:"install-erxes"},"Install erxes"),(0,o.kt)("p",null,"All the dependencies for ",(0,o.kt)("strong",{parentName:"p"},"erxes")," are now installed. You have also configured your server. Follow these remaining steps to complete the installation of ",(0,o.kt)("strong",{parentName:"p"},"erxes"),"."),(0,o.kt)("h3",{id:"download-extract-and-install-each-of-the-erxes-components"},"Download, extract and install each of the erxes components"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Create the empty folder directories for the installation of erxes.")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"NOTE:")," COPY THE ENTIRE CODE BLOCK AS ONE COMMAND."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"mkdir -p ~/erxes.io/erxes \\\n -p ~/erxes.io/erxes-api\\\n -p ~/erxes.io/erxes-crons \\\n -p ~/erxes.io/erxes-logger \\\n -p ~/erxes.io/erxes-integrations \\\n")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Individually download and extract each of these 8 packages. (These commands place them in the proper installation directories.)")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"NOTE:")," COPY THE ENTIRE CODE BLOCK AS ONE COMMAND."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"curl -L https://github.com/erxes/erxes/releases/download/0.19.2/erxes-0.19.2.tar.gz | tar -xz -C ~/erxes.io/erxes/ \\\n    && curl -L https://github.com/erxes/erxes-api/releases/download/0.19.2/erxes-api-0.19.2.tar.gz | tar -xz -C ~/erxes.io/erxes-api/ \\\n    && curl -L https://github.com/erxes/erxes-integrations/releases/download/0.19.2/erxes-integrations-0.19.2.tar.gz | tar -xz -C ~/erxes.io/erxes-integrations/\n")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Install package dependencies (using ",(0,o.kt)("inlineCode",{parentName:"li"},"yarn install"),") required for the packages that make up ",(0,o.kt)("strong",{parentName:"li"},"erxes"),".")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"NOTE:")," COPY THE ENTIRE CODE BLOCK AS ONE COMMAND."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"NOTE:")," This step can take a few minutes to complete."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"cd ~/erxes.io/erxes/erxes-widgets && yarn install \\\n    && cd ~/erxes.io/erxes-api/erxes-api && yarn install \\\n    && cd ~/erxes.io/erxes-api/erxes-email-verifier && yarn install \\\n    && cd ~/erxes.io/erxes-api/erxes-engages-email-sender && yarn install \\\n    && cd ~/erxes.io/erxes-api/erxes-logger && yarn install \\\n    && cd ~/erxes.io/erxes-integrations/erxes-integrations && yarn install \\\n    && cd ~\n")),(0,o.kt)("p",null,"After successfully each of the above packages, you may continue and install ",(0,o.kt)("strong",{parentName:"p"},"PM2"),"."),(0,o.kt)("h2",{id:"install-pm2"},"Install PM2"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"PM2")," is a tool that helps you manage and keep ",(0,o.kt)("strong",{parentName:"p"},"erxes")," online. It is a process manager. You can read more about the installation process here: ",(0,o.kt)("a",{parentName:"p",href:"https://pm2.keymetrics.io/docs/usage/quick-start/"},"How to install PM2")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Install ",(0,o.kt)("strong",{parentName:"li"},"PM2"))),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"npm install pm2@latest -g\n")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Check to see if ",(0,o.kt)("strong",{parentName:"li"},"PM2")," is installed correctly.")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"pm2 --version\n")),(0,o.kt)("p",null,"You should get a similar output as below:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"4.5.0\n# your version of pm2 may be different\n")),(0,o.kt)("p",null,"You should receive a response from ",(0,o.kt)("inlineCode",{parentName:"p"},"pm2 --version"),". The version should show as last line. You will need ",(0,o.kt)("strong",{parentName:"p"},"PM2")," later in the installation process. For now, continue on with the next steps to install ",(0,o.kt)("strong",{parentName:"p"},"Yarn"),"."),(0,o.kt)("h3",{id:"configure-pm2-ecosystemconfigjs"},"Configure PM2 ",(0,o.kt)("inlineCode",{parentName:"h3"},"ecosystem.config.js")),(0,o.kt)("p",null,"In the following steps, you will ",(0,o.kt)("strong",{parentName:"p"},"copy")," and ",(0,o.kt)("strong",{parentName:"p"},"create")," an ",(0,o.kt)("inlineCode",{parentName:"p"},"ecosystem.config.js")," file that ",(0,o.kt)("strong",{parentName:"p"},"PM2")," uses to manage the processes behind ",(0,o.kt)("strong",{parentName:"p"},"erxes"),". ",(0,o.kt)("strong",{parentName:"p"},"Before it will work, you need to provide your exact URL and a password to encrypt all the communication between your front-end and your server.")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Create and open a new ",(0,o.kt)("inlineCode",{parentName:"li"},"ecosystem.config.js")," file.")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"cd ~/erxes.io\nnano ecosystem.config.js\n")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Copy the following content into the file. ",(0,o.kt)("strong",{parentName:"li"},"SAVE THE FILE AS-IS WITHOUT ANY CHANGES","*"),".")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"module.exports = {\n  apps: [\n    {\n      name: 'erxes-api',\n      script: 'dist',\n      cwd: '/home/erxes/erxes.io/erxes-api',\n      log_date_format: 'YYYY-MM-DD HH:mm Z',\n      node_args: '--max_old_space_size=4096',\n      env: {\n        PORT: 3300,\n        NODE_ENV: 'production',\n        JWT_TOKEN_SECRET: 'YOUR_SECRET_TOKEN',\n        DEBUG: 'erxes-api:*',\n        MONGO_URL: 'mongodb://localhost/erxes',\n        REDIS_HOST: 'localhost',\n        REDIS_PORT: 6379,\n        REDIS_PASSWORD: '',\n        RABBITMQ_HOST: 'amqp://localhost',\n        ELASTICSEARCH_URL: 'http://localhost:9200',\n        MAIN_APP_DOMAIN: 'https://YOUR_DOMAIN_COM',\n        WIDGETS_DOMAIN: 'https://YOUR_DOMAIN_COM/widgets',\n        INTEGRATIONS_API_DOMAIN: 'https://YOUR_DOMAIN_COM/integrations',\n      },\n    },\n    {\n      name: 'erxes-cronjobs',\n      script: 'dist/cronJobs',\n      cwd: '/home/erxes/erxes.io/erxes-api',\n      log_date_format: 'YYYY-MM-DD HH:mm Z',\n      node_args: '--max_old_space_size=4096',\n      env: {\n        PORT_CRONS: 3600,\n        NODE_ENV: 'production',\n        PROCESS_NAME: 'crons',\n        DEBUG: 'erxes-crons:*',\n        MONGO_URL: 'mongodb://localhost/erxes',\n        REDIS_HOST: 'localhost',\n        REDIS_PORT: 6379,\n        REDIS_PASSWORD: '',\n        RABBITMQ_HOST: 'amqp://localhost',\n      },\n    },\n    {\n      name: 'erxes-workers',\n      script: 'dist/workers',\n      cwd: '/home/erxes/erxes.io/erxes-api',\n      log_date_format: 'YYYY-MM-DD HH:mm Z',\n      node_args: '--max_old_space_size=4096',\n      env: {\n        PORT_WORKERS: 3700,\n        NODE_ENV: 'production',\n        DEBUG: 'erxes-workers:*',\n        MONGO_URL: 'mongodb://localhost/erxes',\n        REDIS_HOST: 'localhost',\n        REDIS_PORT: 6379,\n        REDIS_PASSWORD: '',\n        RABBITMQ_HOST: 'amqp://localhost',\n        JWT_TOKEN_SECRET: 'YOUR_SECRET_TOKEN',\n      },\n    },\n    {\n      name: 'erxes-widgets',\n      script: 'dist',\n      cwd: '/home/erxes/erxes.io/erxes-widgets',\n      log_date_format: 'YYYY-MM-DD HH:mm Z',\n      node_args: '--max_old_space_size=4096',\n      env: {\n        PORT: 3200,\n        NODE_ENV: 'production',\n        ROOT_URL: 'https://YOUR_DOMAIN_COM/widgets',\n        API_URL: 'https://YOUR_DOMAIN_COM/api',\n        API_SUBSCRIPTIONS_URL: 'wss://YOUR_DOMAIN_COM/api/subscriptions',\n      },\n    },\n    {\n      name: 'erxes-engages',\n      script: 'dist',\n      cwd: '/home/erxes/erxes.io/erxes-engages-email-sender',\n      log_date_format: 'YYYY-MM-DD HH:mm Z',\n      node_args: '--max_old_space_size=4096',\n      env: {\n        PORT: 3900,\n        NODE_ENV: 'production',\n        DEBUG: 'erxes-engages:*',\n        MAIN_API_DOMAIN: 'https://YOUR_DOMAIN_COM/api',\n        MONGO_URL: 'mongodb://localhost/erxes_engages',\n        RABBITMQ_HOST: 'amqp://localhost',\n        REDIS_HOST: 'localhost',\n        REDIS_PORT: 6379,\n        REDIS_PASSWORD: '',\n      },\n    },\n    {\n      name: 'erxes-logger',\n      script: 'dist',\n      cwd: '/home/erxes/erxes.io/erxes-logger',\n      log_date_format: 'YYYY-MM-DD HH:mm Z',\n      node_args: '--max_old_space_size=4096',\n      env: {\n        PORT: 3800,\n        NODE_ENV: 'production',\n        DEBUG: 'erxes-logs:*',\n        MONGO_URL: 'mongodb://localhost/erxes_logger',\n        RABBITMQ_HOST: 'amqp://localhost',\n      },\n    },\n    {\n      name: 'erxes-integrations',\n      script: 'dist',\n      cwd: '/home/erxes/erxes.io/erxes-integrations',\n      log_date_format: 'YYYY-MM-DD HH:mm Z',\n      node_args: '--max_old_space_size=4096',\n      env: {\n        PORT: 3400,\n        NODE_ENV: 'production',\n        DEBUG: 'erxes-integrations:*',\n        DOMAIN: 'https://YOUR_DOMAIN_COM/integrations',\n        MAIN_APP_DOMAIN: 'https://YOUR_DOMAIN_COM',\n        MAIN_API_DOMAIN: 'https://YOUR_DOMAIN_COM/api',\n        MONGO_URL: 'mongodb://localhost/erxes_integrations',\n        RABBITMQ_HOST: 'amqp://localhost',\n        REDIS_HOST: 'localhost',\n        REDIS_PORT: 6379,\n        REDIS_PASSWORD: '',\n      },\n    },\n    {\n      name: 'erxes-elkSyncer',\n      script: 'main.py',\n      cwd: '/home/erxes/erxes.io/erxes-elkSyncer/elkSyncer',\n      log_date_format: 'YYYY-MM-DD HH:mm Z',\n      interpreter: '/usr/bin/python3',\n      env: {\n        MONGO_URL: 'mongodb://localhost/erxes',\n        ELASTICSEARCH_URL: 'http://localhost:9200',\n      },\n    },\n    {\n      name: 'erxes-email-verifier',\n      script: 'dist',\n      cwd: '/home/erxes/erxes.io/erxes-email-verifier',\n      log_date_format: 'YYYY-MM-DD HH:mm Z',\n      node_args: '--max_old_space_size=4096',\n      env: {\n        PORT_WORKERS: 3700,\n        NODE_ENV: 'production',\n        DEBUG: 'erxes-workers:*',\n        MONGO_URL: 'mongodb://localhost/erxes',\n        REDIS_HOST: 'localhost',\n        REDIS_PORT: 6379,\n        REDIS_PASSWORD: '',\n        RABBITMQ_HOST: 'amqp://localhost',\n        JWT_TOKEN_SECRET: 'YOUR_SECRET_TOKEN',\n      },\n    },\n  ],\n};\n")),(0,o.kt)("p",null,"The next step is to set ",(0,o.kt)("strong",{parentName:"p"},"environment variables")," so that we can easily populate the ",(0,o.kt)("strong",{parentName:"p"},"ecosystem.config.js")," file."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Run the following command, but replace ",(0,o.kt)("inlineCode",{parentName:"li"},"YOUR_ACTUAL_DOMAIN_COM")," with your actual domain name.")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"#export YOUR_DOMAIN_COM=erxes.example.com\nexport YOUR_DOMAIN_COM=YOUR_ACTUAL_DOMAIN_COM\n")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Run the following command to create a ",(0,o.kt)("strong",{parentName:"li"},"secret token"),".")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"export YOUR_SECRET_TOKEN=`python3 -c 'import os,base64; print(base64.urlsafe_b64encode(os.urandom(16)).decode())'`\n")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Run each script below, to update your ",(0,o.kt)("strong",{parentName:"li"},"DOMAIN_NAME_COM","*")," in the ",(0,o.kt)("strong",{parentName:"li"},"ecosystem.config.js"))),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"sed -i 's,YOUR_DOMAIN_COM,'\"${YOUR_DOMAIN_COM}\"',g' ecosystem.config.js\n")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Run each script below, to update your ",(0,o.kt)("strong",{parentName:"li"},"SECRET_PASSWORD_TOKEN","*")," in the ",(0,o.kt)("strong",{parentName:"li"},"ecosystem.config.js"))),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"sed -i 's,YOUR_SECRET_TOKEN,'\"${YOUR_SECRET_TOKEN}\"',g' ecosystem.config.js\n")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Start PM2")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"pm2 start ecosystem.config.js\n")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Generate a startup script. Copy/paste the script in the terminal and run it.")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"pm2 startup\n")),(0,o.kt)("p",null,"The above will generate a script like this: ",(0,o.kt)("strong",{parentName:"p"},"DO NOT USE THIS EXAMPLE - USE YOURS GENERATED IN THE TERMINAL")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"# DO NOT COPY THIS - USE THE ONE GENERATED IN THE TERMINAL\n# sudo env PATH=$PATH:/home/erxes/.nvm/versions/node/v12.18.2/bin /home/erxes/.nvm/versions/node/v12.18.2/lib/node_modules/pm2/bin/pm2 startup systemd -u erxes --hp /home/erxes\n")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Now copy ",(0,o.kt)("strong",{parentName:"li"},"your output"),". Similar to the below.")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"# THIS IS AN EXAMPLE - USE YOURS\nsudo env PATH=$PATH:/home/erxes/.nvm/versions/node/v12.18.2/bin /home/erxes/.nvm/versions/node/v12.18.2/lib/node_modules/pm2/bin/pm2 startup systemd -u erxes --hp /home/erxes\n")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Save all the applications that ",(0,o.kt)("strong",{parentName:"li"},"PM2")," is managing.")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"pm2 save\n")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Verify all process are running.")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"pm2 l\n")),(0,o.kt)("p",null,"The status of all the processes should say ",(0,o.kt)("strong",{parentName:"p"},"online"),"."),(0,o.kt)("h3",{id:"configure-frontend-environment-variables"},"Configure frontend environment variables"),(0,o.kt)("p",null,"In the previous step, you set environment variables using ",(0,o.kt)("strong",{parentName:"p"},"PM2"),", but ",(0,o.kt)("strong",{parentName:"p"},"PM2")," does not have access to the bundled front-end static code. Therefore, you need to set the environment variables needed from the front-end differently."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Open the appropriate ",(0,o.kt)("inlineCode",{parentName:"li"},"env.js")," file in the nano editor.")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"nano ~/erxes.io/erxes/build/js/env.js\n")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Copy the following ",(0,o.kt)("strong",{parentName:"li"},"environment variables")," in between the ",(0,o.kt)("strong",{parentName:"li"},"{ }"),", and replace ",(0,o.kt)("strong",{parentName:"li"},"YOUR_DOMAIN_COM")," with your actual domain name.")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'NODE_ENV: "production",\nREACT_APP_API_URL: "https://YOUR_DOMAIN_COM/api",\nREACT_APP_API_SUBSCRIPTION_URL: "wss://YOUR_DOMAIN_COM/api/subscriptions",\nREACT_APP_CDN_HOST: "https://YOUR_DOMAIN_COM/widgets"\n')),(0,o.kt)("p",null,"It should look like this, but ",(0,o.kt)("strong",{parentName:"p"},"with your actual domain name"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'window.env = {\n    NODE_ENV: "production",\n    REACT_APP_API_URL: "https://erxes.example.com/api",\n    REACT_APP_API_SUBSCRIPTION_URL: "wss://erxes.example.com/api/subscriptions",\n    REACT_APP_CDN_HOST: "https://erxes.example.com/widgets"\n}\n')),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"save the file with ",(0,o.kt)("inlineCode",{parentName:"li"},"ctrl + x")," and then ",(0,o.kt)("inlineCode",{parentName:"li"},"y")," to accept all changes.")),(0,o.kt)("p",null,"You are now ready to ",(0,o.kt)("strong",{parentName:"p"},"initialize")," and ",(0,o.kt)("strong",{parentName:"p"},"load the permissions")," in ",(0,o.kt)("strong",{parentName:"p"},"erxes"),"."),(0,o.kt)("h2",{id:"export-mongodb-url"},"export MongoDB URL"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"initialize Erxes and generate ",(0,o.kt)("strong",{parentName:"li"},"login password"),".")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'cd ~\nexport MONGO_URL="mongodb://localhost/erxes"\n')),(0,o.kt)("h2",{id:"congratulations-time-to-log-in"},"Congratulations, time to log in"),(0,o.kt)("p",null,"You have installed ",(0,o.kt)("strong",{parentName:"p"},"erxes")," and all the dependencies. You may now visit your url, and log in."))}u.isMDXComponent=!0}}]);