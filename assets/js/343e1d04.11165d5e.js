(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[6950],{3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return c},kt:function(){return m}});var r=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var p=r.createContext({}),i=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},c=function(e){var t=i(e.components);return r.createElement(p.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,p=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),u=i(n),m=o,k=u["".concat(p,".").concat(m)]||u[m]||d[m]||a;return n?r.createElement(k,l(l({ref:t},c),{},{components:n})):r.createElement(k,l({ref:t},c))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,l=new Array(a);l[0]=u;var s={};for(var p in t)hasOwnProperty.call(t,p)&&(s[p]=t[p]);s.originalType=e,s.mdxType="string"==typeof e?e:o,l[1]=s;for(var i=2;i<a;i++)l[i]=n[i];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},82628:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return l},metadata:function(){return s},toc:function(){return p},default:function(){return c}});var r=n(74034),o=n(79973),a=(n(67294),n(3905)),l={id:"deployment",title:"Deployment",sidebar_label:"Installation"},s={unversionedId:"developer/deployment",id:"developer/deployment",isDocsHomePage:!1,title:"Deployment",description:"Preparing the installation",source:"@site/docs/developer/deployment.md",sourceDirName:"developer",slug:"/developer/deployment",permalink:"/developer/deployment",editUrl:"https://github.com/erxes/erxes/edit/erxes-docs-blog/docs/docs/developer/deployment.md",version:"current",lastUpdatedBy:"Ariukasq1",lastUpdatedAt:1660616661,formattedLastUpdatedAt:"8/16/2022",sidebar_label:"Installation",frontMatter:{id:"deployment",title:"Deployment",sidebar_label:"Installation"},sidebar:"docs",previous:{title:"Script installation",permalink:"/developer/script-install"},next:{title:"Overview",permalink:"/contribute/overview"}},p=[{value:"Preparing the installation",id:"preparing-the-installation",children:[{value:"Prerequisites",id:"prerequisites",children:[]},{value:"Installing on server",id:"installing-on-server",children:[]},{value:"Default ports",id:"default-ports",children:[]}]}],i={toc:p};function c(e){var t=e.components,n=(0,o.Z)(e,["components"]);return(0,a.kt)("wrapper",(0,r.Z)({},i,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"preparing-the-installation"},"Preparing the installation"),(0,a.kt)("h3",{id:"prerequisites"},"Prerequisites"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Docker"),(0,a.kt)("li",{parentName:"ul"},"Docker-compose")),(0,a.kt)("h3",{id:"installing-on-server"},"Installing on server"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Install.sh \u0444\u0430\u0439\u043b \u04af\u04af\u0441\u0433\u044d\u043d \u0431\u044d\u043b\u0434\u044d\u0436 \u0434\u043e\u043e\u0440 script - \u0438\u0439\u0433 \u0445\u0443\u0443\u043b\u0430\u0445")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'#!/bin/bash\necho -e "\\e[1mStep 1 $now : Update \u0445\u0438\u0439\u0436 \u0431\u0430\u0439\u043d\u0430 \\e[0m"\nsudo apt-get update -y\n# nginx install\necho -e "\\e[1mStep 1 $now : Nginx \u0441\u0443\u0443\u043b\u0433\u0430\u0436 \u0431\u0430\u0439\u043d\u0430\\e[0m"\nsudo apt install nginx -y\n# docker install\nsudo apt update -y\necho -e "\\e[1mStep 1 $now : docker  \u0441\u0443\u0443\u043b\u0433\u0430\u0436 \u0431\u0430\u0439\u043d\u0430\\e[0m"\nsudo apt install apt-transport-https ca-certificates curl software-properties-common -y\ncurl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -\nsudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu focal stable"\napt-cache policy docker-ce\nsudo apt install docker-ce -y\n\necho -e "\\e[1mStep 1 $now : certbot \u0441\u0443\u0443\u043b\u0433\u0430\u0436 \u0431\u0430\u0439\u043d\u0430\\e[0m"\nsudo apt install certbot python3-certbot-nginx\n\n#user config\n#sudo su\n#passwd ubuntu\n#sudo usermod -aG docker ubuntu\n#su - ubuntu\n\n#docker-compose install\necho -e "\\e[1mStep 1 $now : docker compose  \u0441\u0443\u0443\u043b\u0433\u0430\u0436 \u0431\u0430\u0439\u043d\u0430\\e[0m"\nsudo apt-get update -y\nsudo curl -L "https://github.com/docker/compose/releases/download/1.27.4/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose\nsudo chmod +x /usr/local/bin/docker-compose\necho -e "\\e[1mStep 1 $now : nodejs \u0441\u0443\u0443\u043b\u0433\u0430\u0436 \u0431\u0430\u0439\u043d\u0430\\e[0m"\n#new directory\nsudo apt-get install nodejs -y\necho -e "\\e[1mStep 1 $now : awscli \u0441\u0443\u0443\u043b\u0433\u0430\u0436 \u0431\u0430\u0439\u043d\u0430\\e[0m"\nsudo apt-get install awscli -y\necho -e "\\e[1mStep 1 $now : npm \u0441\u0443\u0443\u043b\u0433\u0430\u0436 \u0431\u0430\u0439\u043d\u0430\\e[0m"\nsudo apt install npm -y\necho -e "\\e[1mStep 1 $now : erxes \u043c\u044d\u0434\u044d\u044d\u043b\u043b\u044d\u044d \u043e\u0440\u0443\u0443\u043b\u043d\u0430 \u0443\u0443\\e[0m"\nsudo npm install -g create-erxes-app -y\ncreate-erxes-app erxes\n')),(0,a.kt)("ol",{start:2},(0,a.kt)("li",{parentName:"ol"},"Install.sh \u0444\u0430\u0439\u043b\u0434\u0430\u0430 permission \u04e9\u0433\u04e9\u0445 \u043a\u043e\u043c\u043c\u0430\u043d\u0434")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"}," sudo chmod +x install.sh\n")),(0,a.kt)("ol",{start:3},(0,a.kt)("li",{parentName:"ol"},"Install.sh - \u044d\u044d \u0430\u0436\u0438\u043b\u043b\u0443\u0443\u043b\u0430\u0445")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"}," ./install.sh\n")),(0,a.kt)("p",null,":::Caution\nInstall.sh \u0430\u0436\u0438\u043b\u043b\u0430\u0436 \u0431\u0430\u0439\u0445 \u04af\u0435\u0434",(0,a.kt)("br",{parentName:"p"}),"\n","Erxes \u043c\u044d\u0434\u044d\u044d\u043b\u043b\u044d\u044d \u043e\u0440\u0443\u0443\u043b\u043d\u0430 \u0443\u0443 \u0445\u044d\u0441\u044d\u0433 \u0433\u0430\u0440\u0436 \u0438\u0440\u043d\u044d.\n:::"),(0,a.kt)("ol",{start:4},(0,a.kt)("li",{parentName:"ol"},"Please enter your domain (localhost) \u0445\u044d\u0441\u044d\u0433 \u0434\u044d\u044d\u0440 xos deploy \u0445\u0438\u0439\u0433\u0434\u044d\u0445 \u0434\u043e\u043c\u0430\u0439\u043d- \u043e\u043e \u0431\u0438\u0447\u043d\u044d.")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"  Example: erxes-test.com\n")),(0,a.kt)("ol",{start:5},(0,a.kt)("li",{parentName:"ol"},"Rabbitmq host (optional) \u0445\u044d\u0441\u044d\u0433 \u0434\u044d\u044d\u0440 hostname \u043e\u0440\u0443\u0443\u043b\u0430\u0445")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"Example: erxes\n")),(0,a.kt)("ol",{start:6},(0,a.kt)("li",{parentName:"ol"},"Redis host (optional) \u0445\u044d\u0441\u044d\u0433 \u0434\u044d\u044d\u0440 hostname \u043e\u0440\u0443\u0443\u043b\u0430\u0445")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"Example: erxes\n")),(0,a.kt)("ol",{start:7},(0,a.kt)("li",{parentName:"ol"},"Redis port (6379) default - \u0430\u0430\u0440\u0430\u0430 \u0431\u0430\u0439\u0445 \u0431\u0430 press enter"),(0,a.kt)("li",{parentName:"ol"},"Redis password (optional) \u0445\u044d\u0441\u044d\u0433 \u0434\u044d\u044d\u0440 \u0434\u0443\u0440\u044b\u043d password \u04e9\u0433\u04e9\u0445"),(0,a.kt)("li",{parentName:"ol"},"Elasticsearch url \u0445\u044d\u0441\u044d\u0433 \u0434\u044d\u044d\u0440 default localhost:9200 - \u0430\u0430\u0440\u0430\u0430 \u0431\u0430\u0439\u0445 \u0431\u0430 press enter"),(0,a.kt)("li",{parentName:"ol"},"\u04ae\u04af\u043d\u0438\u0439 \u0434\u0430\u0440\u0430\u0430 erxes \u043c\u0430\u0430\u043d\u044c \u0430\u043c\u0436\u0438\u043b\u0442\u0442\u0430\u0439 \u0441\u0443\u0443\u0445 \u0431\u0430 erxes directory - \u043b\u0443\u0443\u0433\u0430\u0430 \u043e\u0440\u043e\u0445 \u0445\u044d\u0440\u044d\u0433\u0442\u044d\u0439.")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"}," cd erxes\n")),(0,a.kt)("p",null,":::Info\nSee the latest version of npm erxes here ",(0,a.kt)("a",{parentName:"p",href:"https://www.npmjs.com/package/erxes"},"https://www.npmjs.com/package/erxes")),(0,a.kt)("p",null,":::"),(0,a.kt)("ol",{start:11},(0,a.kt)("li",{parentName:"ol"},"Copy the text below instead of configs.json")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'{\n   "jwt_token_secret": "strong_token",\n   "db_server_address": "db_server_ip_address",\n   "domain": "https://example.com",\n   "elasticsearch": {},\n   "redis": {\n       "password": "strongest_password"\n   },\n   "mongo": {\n       "username": "mongo_user",\n       "password": "strongest_password"\n   },\n   "rabbitmq": {\n       "cookie": "strongest_value",\n       "user": "rabbitmq_user",\n       "pass": "strongest_password",\n       "vhost": "rabbitmq_host"\n   },\n   "plugins": [\n       {  "name": "contacts" },\n       {  "name": "inbox" },\n       {  "name": "tags"  },\n       {  "name": "cards" },\n       {  "name": "segments" },\n       {  "name": "integrations" }\n   ]\n}\n\n\n')),(0,a.kt)("ol",{start:12},(0,a.kt)("li",{parentName:"ol"},"This command installs a package, and any packages that it depends on.")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"npm install\n")),(0,a.kt)("ol",{start:13},(0,a.kt)("li",{parentName:"ol"},"User - \u0434\u044d\u044d docker permission \u04e9\u0433\u04e9\u0445")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"su\nusermod -aG docker erxes\nsu - erxes\n\n")),(0,a.kt)("ol",{start:14},(0,a.kt)("li",{parentName:"ol"},"\u04ae\u04af\u043d\u0438\u0439 \u0434\u0430\u0440\u0430\u0430 erxes directory - \u043b\u0443\u0443\u0433\u0430\u0430 \u043e\u0440\u043e\u0445 \u0445\u044d\u0440\u044d\u0433\u0442\u044d\u0439.")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"}," cd erxes\n")),(0,a.kt)("ol",{start:15},(0,a.kt)("li",{parentName:"ol"},"Erxes \u0434\u043e\u0442\u0440\u043e\u043e \u0434\u0430\u0440\u0430\u0430\u0445 \u043a\u043e\u043c\u043c\u0430\u043d\u0434\u044b\u0433 \u04e9\u0433\u04e9\u0445")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"docker swarm init\n")),(0,a.kt)("p",null,":::Note\nDatabase containers \u0430\u0441\u0430\u0430\u0445 \u043a\u043e\u043c\u043c\u0430\u043d\u0434 \u04e9\u0433\u04e9\u04e9\u0434 \u0431\u04af\u0445 container \u0430\u0441\u0430\u0436 \u0434\u0443\u0443\u0441\u0441\u0430\u043d\u044b \u0434\u0430\u0440\u0430\u0430 \u0434\u0430\u0440\u0430\u0430\u0433\u044b\u043d \u04af\u0439\u043b\u0434\u043b\u044d\u044d \u0445\u0438\u0439\u0445\n:::"),(0,a.kt)("ol",{start:16},(0,a.kt)("li",{parentName:"ol"},"Run the following to start database containers")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"sudo npm run erxes deploy-dbs\n")),(0,a.kt)("ol",{start:17},(0,a.kt)("li",{parentName:"ol"},"Run the following to start application containers")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"   sudo npm run erxes up\n")),(0,a.kt)("ol",{start:18},(0,a.kt)("li",{parentName:"ol"},"See the generated docker services using the command below.")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"   docker service ls\n")),(0,a.kt)("ol",{start:19},(0,a.kt)("li",{parentName:"ol"},"Use the command below to view the finished docker containers")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"}," docker ps -a\n")),(0,a.kt)("ol",{start:20},(0,a.kt)("li",{parentName:"ol"},"Copying below line code from docker-compose.yml")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"mongodb://username:password/erxes?authSource=admin\n")),(0,a.kt)("ol",{start:21},(0,a.kt)("li",{parentName:"ol"},"Copying this container url by using docker ps -a command")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"erxes-dbs_mongo.1.value bash\n")),(0,a.kt)("ol",{start:22},(0,a.kt)("li",{parentName:"ol"},"The mongo database must be started with a replica set.\nUse the following command to access the mongo database running docker container:")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"docker exec -it erxes-dbs_mongo.1.value bash\n")),(0,a.kt)("ol",{start:23},(0,a.kt)("li",{parentName:"ol"},"After trying running following command")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"rs.initiate()\n")),(0,a.kt)("p",null,'Many times, it becomes "RS0: primary".\nThese commands are given as a replica set, and when done correctly, the mongo shell changes to "RS0: primary".'),(0,a.kt)("ol",{start:24},(0,a.kt)("li",{parentName:"ol"},"After completing the configuration on the mongo database, delete and restart the services through the docker network. First, do the database services.")),(0,a.kt)("p",null,"docker stack rm erxes\ndocker stack rm erxes-dbs\nnpm run erxes deploy-dbs\nnpm run erxes up\nnpm run erxes up \u2013 \u2013uis"),(0,a.kt)("p",null,":::Note\nContainers are generated one by one, so wait until they finish reading.\n:::"),(0,a.kt)("ol",{start:25},(0,a.kt)("li",{parentName:"ol"},"Check the log file in the erxes_gateway container to make sure the services are working properly.")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"docker logs -f erxes_gateway.1.value\n")),(0,a.kt)("p",null,'If "plugin_name has no address value" is displayed, it is not connected to the database.'),(0,a.kt)("ol",{start:26},(0,a.kt)("li",{parentName:"ol"},"nginx .conf - \u0438\u0439\u0433 /etc/nginx/sites-enabled/ \u0440\u0443\u0443 move \u0445\u0438\u0439\u0445")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"sudo mv nginx.conf /etc/nginx/sites-enabled/\n\n")),(0,a.kt)("ol",{start:27},(0,a.kt)("li",{parentName:"ol"},"/etc/nginx/sites-enabled \u0437\u0430\u043c \u0434\u044d\u044d\u0440 \u043e\u0447\u0438\u0445")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"cd /etc/nginx/sites-enabled\n")),(0,a.kt)("ol",{start:28},(0,a.kt)("li",{parentName:"ol"},"nginx - \u044d\u044d configure \u0445\u0438\u0439\u0445")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"sudo nginx -t\n")),(0,a.kt)("ol",{start:29},(0,a.kt)("li",{parentName:"ol"},"Nginx - \u044d\u044d restart \u0445\u0438\u0439\u0445")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"sudo service nginx restart\n")),(0,a.kt)("ol",{start:30},(0,a.kt)("li",{parentName:"ol"},"Free Ssl \u0442\u043e\u0445\u0438\u0440\u0443\u0443\u043b\u0436 \u04e9\u0433\u04e9\u0445")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"sudo certbot \u2013nginx -d domain_name\n")),(0,a.kt)("ol",{start:31},(0,a.kt)("li",{parentName:"ol"},"\u0411\u04af\u0440\u0442\u0433\u044d\u043b\u0442\u044d\u0439 email \u0431\u0438\u0447\u0438\u0445"),(0,a.kt)("li",{parentName:"ol"},"Please choose redirect option")),(0,a.kt)("p",null,"\u041e\u0434\u043e\u043e \u0442\u0435\u0441\u0442\u0438\u0439\u043d \u0434\u043e\u043c\u0430\u0439\u043d - \u043e\u043e browser \u0434\u044d\u044d\u0440\u044d\u044d \u0431\u0438\u0447\u0438\u0436 \u043e\u0440\u0436 \u04af\u0437\u044d\u0445."),(0,a.kt)("h3",{id:"default-ports"},"Default ports"),(0,a.kt)("p",null,"Must be published to host machine network"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"erxes main frontend app will run on port 3000"),(0,a.kt)("li",{parentName:"ul"},"erxes-widgets will run on port 3200"),(0,a.kt)("li",{parentName:"ul"},"erxes-api will run on port 3300"),(0,a.kt)("li",{parentName:"ul"},"erxes-integrations will run on port 3400"),(0,a.kt)("li",{parentName:"ul"},"erxes-dashboard-api will run on port 4300"),(0,a.kt)("li",{parentName:"ul"},"erxes-dashboard-front will run on port 4400")),(0,a.kt)("p",null,"Should not published to host machine network, only used internally"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"erxes-api (cron) will run on port 3600"),(0,a.kt)("li",{parentName:"ul"},"erxes-api (worker) will run on port 3700"),(0,a.kt)("li",{parentName:"ul"},"erxes-logger will run on port 3800"),(0,a.kt)("li",{parentName:"ul"},"redis server will run on port 6379"),(0,a.kt)("li",{parentName:"ul"},"mongodb server will run on port 27017")))}c.isMDXComponent=!0}}]);